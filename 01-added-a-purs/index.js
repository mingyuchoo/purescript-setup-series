// Generated by purs bundle 0.14.5
var PS = {};
(function(exports) {
  "use strict";

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var showNumber = {
      show: $foreign.showNumberImpl
  };
  var show = function (dict) {
      return dict.show;
  };
  exports["show"] = show;
  exports["showNumber"] = showNumber;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Shapes"] = $PS["Shapes"] || {};
  var exports = $PS["Shapes"];
  var Circle = (function () {
      function Circle(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Circle.create = function (value0) {
          return function (value1) {
              return new Circle(value0, value1);
          };
      };
      return Circle;
  })();
  var Square = (function () {
      function Square(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Square.create = function (value0) {
          return function (value1) {
              return new Square(value0, value1);
          };
      };
      return Square;
  })();
  var Rectangle = (function () {
      function Rectangle(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Rectangle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Rectangle(value0, value1, value2);
              };
          };
      };
      return Rectangle;
  })();
  var Triangle = (function () {
      function Triangle(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Triangle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Triangle(value0, value1, value2);
              };
          };
      };
      return Triangle;
  })();   
  var area = function (v) {
      if (v instanceof Circle) {
          return 3.14 * v.value1 * v.value1;
      };
      if (v instanceof Square) {
          return v.value1 * v.value1;
      };
      if (v instanceof Rectangle) {
          return v.value1 * v.value2;
      };
      if (v instanceof Triangle) {
          return (v.value1 * v.value2) / 2.0;
      };
      throw new Error("Failed pattern match at Shapes (line 34, column 1 - line 34, column 24): " + [ v.constructor.name ]);
  };
  exports["Circle"] = Circle;
  exports["area"] = area;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Console = $PS["Effect.Console"];
  var Shapes = $PS["Shapes"];                
  var main = function __do() {
      Effect_Console.log("\ud83c\udf5d")();
      return Effect_Console.log(Data_Show.show(Data_Show.showNumber)(Shapes.area(new Shapes.Circle({
          x: 0.0,
          y: 0.0
      }, 5.3))))();
  };
  exports["main"] = main;
})(PS);
PS["Main"].main();